(define (remainder a b)
(cond ((= a 0) 0)
((< a b) a)
(else (remainder (- a b) b)))))

(define (fib-iter a b p q n)
(cond ((= n 0) b)
((= (remainder n 2) 0) (fib-iter a b (+ (* p p) (* q q)) (+ (* 2 q p) (* q q)) (/ n 2)))
(else (fib-iter (+ (* b q) (* a q) (* a p)) (+ (* b p) (* a q)) p q (- n 1)))))

(define (fib n)
(fib-iter 1 0 0 1 n))
